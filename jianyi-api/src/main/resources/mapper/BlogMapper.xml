<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jianyi.jianyiblog.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.jianyi.jianyiblog.entity.dto.BlogDto">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="blog_id" jdbcType="BIGINT" property="blogId" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="blog_content" jdbcType="VARCHAR" property="blogContent" />
    <result column="blog_like" jdbcType="BIGINT" property="blogLike" />
    <result column="blog_comments" jdbcType="BIGINT" property="blogComments" />
    <result column="blog_browsing" jdbcType="BIGINT" property="blogBrowsing" />
    <result column="blog_abstract" jdbcType="VARCHAR" property="blogAbstract" />
    <result column="blog_cover" jdbcType="VARCHAR" property="blogCover" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy" />
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
    <result property="cates" column="cates" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    blog_id, blog_title, blog_content, blog_like, blog_comments, blog_browsing, blog_abstract, 
    blog_cover, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME,cates
  </sql>
  <select id="selectByExample" parameterType="com.jianyi.jianyiblog.entity.BlogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jianyi.jianyiblog.entity.BlogExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jianyi.jianyiblog.entity.Blog">
    insert into blog ( blog_title, blog_content,
      blog_like, blog_comments, blog_browsing, 
      blog_abstract, blog_cover, CREATED_BY, 
      CREATED_TIME, UPDATED_BY, UPDATED_TIME
      )
    values ( #{blogTitle,jdbcType=VARCHAR}, #{blogContent,jdbcType=VARCHAR},
      #{blogLike,jdbcType=BIGINT}, #{blogComments,jdbcType=BIGINT}, #{blogBrowsing,jdbcType=BIGINT}, 
      #{blogAbstract,jdbcType=VARCHAR}, #{blogCover,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jianyi.jianyiblog.entity.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="blogTitle != null">
        blog_title,
      </if>
      <if test="blogContent != null">
        blog_content,
      </if>
      <if test="blogLike != null">
        blog_like,
      </if>
      <if test="blogComments != null">
        blog_comments,
      </if>
      <if test="blogBrowsing != null">
        blog_browsing,
      </if>
      <if test="blogAbstract != null">
        blog_abstract,
      </if>
      <if test="blogCover != null">
        blog_cover,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
      <if test="cates != null">
        cates,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="blogTitle != null">
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null">
        #{blogContent,jdbcType=VARCHAR},
      </if>
      <if test="blogLike != null">
        #{blogLike,jdbcType=BIGINT},
      </if>
      <if test="blogComments != null">
        #{blogComments,jdbcType=BIGINT},
      </if>
      <if test="blogBrowsing != null">
        #{blogBrowsing,jdbcType=BIGINT},
      </if>
      <if test="blogAbstract != null">
        #{blogAbstract,jdbcType=VARCHAR},
      </if>
      <if test="blogCover != null">
        #{blogCover,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cates != null">
        #{cates},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jianyi.jianyiblog.entity.BlogExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectHotSix" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List"/>
      from blog
    order by blog_browsing DESC
      LIMIT 6
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blog
    <set>
      <if test="record.blogId != null">
        blog_id = #{record.blogId,jdbcType=INTEGER},
      </if>
      <if test="record.blogTitle != null">
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.blogContent != null">
        blog_content = #{record.blogContent,jdbcType=VARCHAR},
      </if>
      <if test="record.blogLike != null">
        blog_like = #{record.blogLike,jdbcType=BIGINT},
      </if>
      <if test="record.blogComments != null">
        blog_comments = #{record.blogComments,jdbcType=BIGINT},
      </if>
      <if test="record.blogBrowsing != null">
        blog_browsing = #{record.blogBrowsing,jdbcType=BIGINT},
      </if>
      <if test="record.blogAbstract != null">
        blog_abstract = #{record.blogAbstract,jdbcType=VARCHAR},
      </if>
      <if test="record.blogCover != null">
        blog_cover = #{record.blogCover,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null">
        UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blog
    set blog_id = #{record.blogId,jdbcType=INTEGER},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      blog_content = #{record.blogContent,jdbcType=VARCHAR},
      blog_like = #{record.blogLike,jdbcType=BIGINT},
      blog_comments = #{record.blogComments,jdbcType=BIGINT},
      blog_browsing = #{record.blogBrowsing,jdbcType=BIGINT},
      blog_abstract = #{record.blogAbstract,jdbcType=VARCHAR},
      blog_cover = #{record.blogCover,jdbcType=VARCHAR},
      CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jianyi.jianyiblog.entity.Blog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blog
    <set>
      <if test="blogTitle != null">
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null">
        blog_content = #{blogContent,jdbcType=VARCHAR},
      </if>
      <if test="blogLike != null">
        blog_like = #{blogLike,jdbcType=BIGINT},
      </if>
      <if test="blogComments != null">
        blog_comments = #{blogComments,jdbcType=BIGINT},
      </if>
      <if test="blogBrowsing != null">
        blog_browsing = #{blogBrowsing,jdbcType=BIGINT},
      </if>
      <if test="blogAbstract != null">
        blog_abstract = #{blogAbstract,jdbcType=VARCHAR},
      </if>
      <if test="blogCover != null">
        blog_cover = #{blogCover,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jianyi.jianyiblog.entity.Blog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_content = #{blogContent,jdbcType=VARCHAR},
      blog_like = #{blogLike,jdbcType=BIGINT},
      blog_comments = #{blogComments,jdbcType=BIGINT},
      blog_browsing = #{blogBrowsing,jdbcType=BIGINT},
      blog_abstract = #{blogAbstract,jdbcType=VARCHAR},
      blog_cover = #{blogCover,jdbcType=VARCHAR},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      cates = #{cates}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>

  <select id="selectByBlog" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from blog
    <where>
      <if test="blogTitle != null">
       and  blog_title = #{blogTitle}
      </if>
      <if test="blogContent != null">
        and  blog_content = #{blogContent}
      </if>
      <if test="cates != null and cates != ''">
        and  cates  like CONCAT("%",#{cates,jdbcType=VARCHAR},"%")
      </if>
    </where>
  </select>
    <select id="selectblogNumByPrimaryKey" resultMap="BaseResultMap">
      select
        blog_like, blog_comments, blog_browsing
      from blog
      where blog_id = #{blogId,jdbcType=INTEGER}
    </select>
    <select id="selectMouthBlogHot" resultMap="BaseResultMap">
      SELECT
      blog_id,
      blog_cover,
      blog_abstract,
      blog_title
      FROM
      blog
      WHERE
      CREATED_TIME > DATE_ADD( curdate(), INTERVAL - DAY ( curdate())+ 1 DAY ) AND CREATED_TIME  <![CDATA[ < ]]>  date_add(curdate()-day(curdate())+1,interval 1 month)
      ORDER BY
      blog_browsing DESC
      LIMIT 8
    </select>
</mapper>